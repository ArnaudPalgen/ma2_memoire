#transmit a frame with 220 char
lora_ip-INFO-  2021-08-14 14:27:18,919-Init IP layer
lora_mac-INFO-  2021-08-14 14:27:18,919-Init MAC
lora_phy-INFO-  2021-08-14 14:27:18,919-Init PHY
lora_phy-INFO-  2021-08-14 14:27:18,921-Radio configuration: {'txBufSize': 10, 'rxBufSize': 10, 'port': '/dev/ttyUSB0', 'baudrate': '57600', 'frequence': '868100000', 'bandwidth': '125', 'cr': '4/5', 'pwr': '1', 'sf': 'sf12'}
lora_phy-INFO-  2021-08-14 14:27:18,921-PHY TX:mac pause
lora_phy-INFO-  2021-08-14 14:27:18,921-MAC set watchdog timer to 0 ms
lora_phy-INFO-  2021-08-14 14:27:18,921-MAC switch to reception mode
lora_phy-INFO-  2021-08-14 14:27:18,936-PHY TX:radio set mod lora
lora_phy-INFO-  2021-08-14 14:27:18,942-PHY TX:radio set freq 868100000
lora_phy-INFO-  2021-08-14 14:27:18,957-PHY TX:radio set bw 125
lora_phy-INFO-  2021-08-14 14:27:18,963-PHY TX:radio set cr 4/5
lora_phy-INFO-  2021-08-14 14:27:18,969-PHY TX:radio set pwr 1
lora_phy-INFO-  2021-08-14 14:27:18,975-PHY TX:radio set sf sf12
lora_phy-INFO-  2021-08-14 14:27:18,981-PHY TX:radio set wdt 0
lora_phy-INFO-  2021-08-14 14:27:18,988-PHY TX:radio rx 0
lora_phy-INFO-  2021-08-14 14:28:12,790-PHY RX:1B611B0100000000
lora_mac-INFO-  2021-08-14 14:28:12,791-MAC RX: LoraFrame(src_addr=LoraAddr(prefix=27, node_id=24859), dest_addr=LoraAddr(prefix=1, node_id=0), command=<MacCommand.JOIN: 0>, payload='', seq=0, k=False, has_next=False)
lora_phy-INFO-  2021-08-14 14:28:12,791-MAC send:LoraFrame(src_addr=LoraAddr(prefix=1, node_id=0), dest_addr=LoraAddr(prefix=27, node_id=24859), command=<MacCommand.JOIN_RESPONSE: 1>, payload='02', seq=0, k=False, has_next=False)
lora_phy-INFO-  2021-08-14 14:28:12,792-MAC switch to reception mode
lora_phy-INFO-  2021-08-14 14:28:12,792-PHY TX:radio tx 0100001B611B010002
lora_phy-INFO-  2021-08-14 14:28:13,796-PHY TX:radio rx 0
lora_phy-INFO-  2021-08-14 14:28:17,506-PHY RX:02611B010000820160000000000E1140223D162E000E4F9C50494E472030
lora_mac-INFO-  2021-08-14 14:28:17,506-MAC RX: LoraFrame(src_addr=LoraAddr(prefix=2, node_id=24859), dest_addr=LoraAddr(prefix=1, node_id=0), command=<MacCommand.DATA: 2>, payload='60000000000E1140223D162E000E4F9C50494E472030', seq=1, k=True, has_next=False)
lora_mac-WARNING-  2021-08-14 14:28:17,507-Loss of 1 frames
lora_phy-INFO-  2021-08-14 14:28:17,507-MAC send:LoraFrame(src_addr=LoraAddr(prefix=1, node_id=0), dest_addr=LoraAddr(prefix=2, node_id=24859), command=<MacCommand.ACK: 3>, payload='', seq=1, k=False, has_next=False)
lora_ip-INFO-  2021-08-14 14:28:17,508-IP RX: 60000000000E1140223D162E000E4F9C50494E472030 from: 2:24859
lora_phy-INFO-  2021-08-14 14:28:17,510-PHY TX:radio tx 01000002611B0301
lora_phy-INFO-  2021-08-14 14:28:17,512-MAC switch to reception mode
lora_mac-INFO-  2021-08-14 14:28:17,515-IP send 60000000000E1140162E223D000E0742504F4E472030 to: 2:24859
lora_phy-INFO-  2021-08-14 14:28:18,513-PHY TX:radio rx 0
lora_phy-INFO-  2021-08-14 14:28:25,041-PHY RX:02611B0100000402
lora_mac-INFO-  2021-08-14 14:28:25,041-MAC RX: LoraFrame(src_addr=LoraAddr(prefix=2, node_id=24859), dest_addr=LoraAddr(prefix=1, node_id=0), command=<MacCommand.QUERY: 4>, payload='', seq=2, k=False, has_next=False)
lora_phy-INFO-  2021-08-14 14:28:25,042-MAC send:LoraFrame(src_addr=LoraAddr(prefix=1, node_id=0), dest_addr=LoraAddr(prefix=2, node_id=24859), command=<MacCommand.DATA: 2>, payload='60000000000E1140162E223D000E0742504F4E472030', seq=1, k=False, has_next=False)
lora_phy-INFO-  2021-08-14 14:28:25,042-MAC switch to reception mode
lora_phy-INFO-  2021-08-14 14:28:25,042-PHY TX:radio tx 01000002611B020160000000000E1140162E223D000E0742504F4E472030
lora_phy-INFO-  2021-08-14 14:28:26,713-PHY TX:radio rx 0
lora_phy
lora_mac-INFO-  2021-08-14 14:28:36,484-MAC RX: LoraFrame(src_addr=LoraAddr(prefix=2, node_id=24859), dest_addr=LoraAddr(prefix=1, node_id=0), command=<MacCommand.DATA: 2>, payload='6000000000EA1140223D162E00EAAAA131323334626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F75723ED9AFE61509', seq=3, k=True, has_next=False)
lora_phy-INFO-  2021-08-14 14:28:36,484-MAC send:LoraFrame(src_addr=LoraAddr(prefix=1, node_id=0), dest_addr=LoraAddr(prefix=2, node_id=24859), command=<MacCommand.ACK: 3>, payload='', seq=3, k=False, has_next=False)
lora_ipfrom: 2:24859
lora_phy-INFO-  2021-08-14 14:28:36,486-PHY TX:radio tx 01000002611B0303
lora_phy-INFO-  2021-08-14 14:28:36,487-MAC switch to reception mode
lora_mac-INFO-  2021-08-14 14:28:36,490-IP send 60000000000E1140162E223D000E0741504F4E472031 to: 2:24859
lora_phy-INFO-  2021-08-14 14:28:37,490-PHY TX:radio rx 0


========================================================================================================================================================================================================
connecting to /dev/ttyUSB1 [OK]
[2: INFO: Interface ] Button pushed
[2: INFO: LoRa MAC  ] Start LoRaMAC RPL root
[2: DBG : LoRa MAC  ] state = ALONE
[2: INFO: LoRa PHY  ] Init LoRa PHY
[2: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:mac pause resp: [4294967245, none] }
[2: DBG : LoRa PHY  ] frame added
[2: DBG : LoRa PHY  ] TX BUF SIZE: 1
[2: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio set mod  resp: [ok, none] }
[2: DBG : LoRa PHY  ] frame added
[2: DBG : LoRa PHY  ] TX BUF SIZE: 2
[2: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio set freq  resp: [ok, none] }
[2: DBG : LoRa PHY  ] frame added
[2: DBG : LoRa PHY  ] TX BUF SIZE: 3
[2: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio set bw  resp: [ok, none] }
[2: DBG : LoRa PHY  ] frame added
[2: DBG : LoRa PHY  ] TX BUF SIZE: 4
[2: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio set cr  resp: [ok, none] }
[2: DBG : LoRa PHY  ] frame added
[2: DBG : LoRa PHY  ] TX BUF SIZE: 5
[2: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio set pwr  resp: [ok, none] }
[2: DBG : LoRa PHY  ] frame added
[2: DBG : LoRa PHY  ] TX BUF SIZE: 6
[2: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio set sf  resp: [ok, none] }
[2: DBG : LoRa PHY  ] frame added
[2: DBG : LoRa PHY  ] TX BUF SIZE: 7
[2: DBG : LoRa PHY  ] Initialization completed
[2: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio set wdt  resp: [ok, none] }
[2: DBG : LoRa PHY  ] frame added
[2: DBG : LoRa PHY  ] TX BUF SIZE: 8
[2: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio tx  resp: [radio_tx_ok, radio_err] }
[2: DBG : LoRa PHY  ] frame added
[2: DBG : LoRa PHY  ] TX BUF SIZE: 9
[2: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio set wdt  resp: [ok, none] }
[2: DBG : LoRa PHY  ] frame added
[2: DBG : LoRa PHY  ] TX BUF SIZE: 10
[2: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio rx  resp: [radio_err, radio_rx] }
[2: DBG : LoRa PHY  ] frame added
[2: DBG : LoRa PHY  ] TX BUF SIZE: 11
[2: DBG : LoRa MAC  ] SET retransmit timer
[2: DBG : LoRa MAC  ] initialization completed
[2: DBG : LoRa PHY  ] read frame from tx buffer: { cmd:mac pause resp: [4294967245, none] }
[2: DBG : LoRa PHY  ] TX BUF SIZE: 10
[2: INFO: LoRa PHY  ] PHY TX:mac pause
[2: DBG : LoRa PHY  ] wait to send next frame ....
[2: DBG : LoRa PHY  ] UART response:4294967245
[2: DBG : LoRa PHY  ] compare response with:
[2: DBG : LoRa PHY  ]    - 4294967245
[2: DBG : LoRa PHY  ] this is th expected response
[2: DBG : LoRa PHY  ] can send next frame
[2: DBG : LoRa PHY  ] read frame from tx buffer: { cmd:radio set mod  resp: [ok, none] }
[2: DBG : LoRa PHY  ] TX BUF SIZE: 9
[2: INFO: LoRa PHY  ] PHY TX:radio set mod lora
[2: DBG : LoRa PHY  ] wait to send next frame ....
[2: DBG : LoRa PHY  ] UART response:ok
[2: DBG : LoRa PHY  ] compare response with:
[2: DBG : LoRa PHY  ]    - ok
[2: DBG : LoRa PHY  ] this is th expected response
[2: DBG : LoRa PHY  ] can send next frame
[2: DBG : LoRa PHY  ] read frame from tx buffer: { cmd:radio set freq  resp: [ok, none] }
[2: DBG : LoRa PHY  ] TX BUF SIZE: 8
[2: INFO: LoRa PHY  ] PHY TX:radio set freq 868100000
[2: DBG : LoRa PHY  ] wait to send next frame ....
[2: DBG : LoRa PHY  ] UART response:ok
[2: DBG : LoRa PHY  ] compare response with:
[2: DBG : LoRa PHY  ]    - ok
[2: DBG : LoRa PHY  ] this is th expected response
[2: DBG : LoRa PHY  ] can send next frame
[2: DBG : LoRa PHY  ] read frame from tx buffer: { cmd:radio set bw  resp: [ok, none] }
[2: DBG : LoRa PHY  ] TX BUF SIZE: 7
[2: INFO: LoRa PHY  ] PHY TX:radio set bw 125
[2: DBG : LoRa PHY  ] wait to send next frame ....
[2: DBG : LoRa PHY  ] UART response:ok
[2: DBG : LoRa PHY  ] compare response with:
[2: DBG : LoRa PHY  ]    - ok
[2: DBG : LoRa PHY  ] this is th expected response
[2: DBG : LoRa PHY  ] can send next frame
[2: DBG : LoRa PHY  ] read frame from tx buffer: { cmd:radio set cr  resp: [ok, none] }
[2: DBG : LoRa PHY  ] TX BUF SIZE: 6
[2: INFO: LoRa PHY  ] PHY TX:radio set cr 4/5
[3: DBG : LoRa PHY  ] wait to send next frame ....
[3: DBG : LoRa PHY  ] UART response:ok
[3: DBG : LoRa PHY  ] compare response with:
[3: DBG : LoRa PHY  ]    - ok
[3: DBG : LoRa PHY  ] this is th expected response
[3: DBG : LoRa PHY  ] can send next frame
[3: DBG : LoRa PHY  ] read frame from tx buffer: { cmd:radio set pwr  resp: [ok, none] }
[3: DBG : LoRa PHY  ] TX BUF SIZE: 5
[3: INFO: LoRa PHY  ] PHY TX:radio set pwr 1
[3: DBG : LoRa PHY  ] wait to send next frame ....[3: DBG : LoRa PHY  ] UART response:ok
[3: DBG : LoRa PHY  ] compare response with:
[3: DBG : LoRa PHY  ]    - ok
[3: DBG : LoRa PHY  ] this is th expected response
�
[3: DBG : LoRa PHY  ] can send next frame
[3: DBG : LoRa PHY  ] read frame from tx buffer: { cmd:radio set sf  resp: [ok, none] }
[3: DBG : LoRa PHY  ] TX BUF SIZE: 4
[3: INFO: LoRa PHY  ] PHY TX:radio set sf sf12
[3: DBG : LoRa PHY  ] wait to send next frame ....
[3: DBG : LoRa PHY  ] UART response:ok
[3: DBG : LoRa PHY  ] compare response with:
[3: DBG : LoRa PHY  ]    - ok
[3: DBG : LoRa PHY  ] this is th expected response
[3: DBG : LoRa PHY  ] can send next frame
[3: DBG : LoRa PHY  ] read frame from tx buffer: { cmd:radio set wdt  resp: [ok, none] }
[3: DBG : LoRa PHY  ] TX BUF SIZE: 3
[3: INFO: LoRa PHY  ] PHY TX:radio set wdt 0
[3: DBG : LoRa PHY  ] wait to send next frame ....
[3: DBG : LoRa PHY  ] UART response:ok
[3: DBG : LoRa PHY  ] compare response with:
[3: DBG : LoRa PHY  ]    - ok
[3: DBG : LoRa PHY  ] this is th expected response
[3: DBG : LoRa PHY  ] can send next frame
[3: DBG : LoRa PHY  ] read frame from tx buffer: { cmd:radio tx  resp: [radio_tx_ok, radio_err] }
[3: DBG : LoRa PHY  ] TX BUF SIZE: 2
[3: INFO: LoRa PHY  ] PHY TX:radio tx 1B611B0100000000
[3: DBG : LoRa PHY  ] wait to send next frame ....
[3: DBG : LoRa PHY  ] UART response:ok
[3: DBG : LoRa PHY  ] compare response with:
[3: DBG : LoRa PHY  ]    - radio_tx_ok
[3: DBG : LoRa PHY  ]    - radio_err
[3: INFO: APP       ] Network not joined
[4: DBG : LoRa PHY  ] UART response:radio_tx_ok
[4: DBG : LoRa PHY  ] compare response with:
[4: DBG : LoRa PHY  ]    - radio_tx_ok
[4: DBG : LoRa PHY  ] this is th expected response
[4: DBG : LoRa PHY  ] can send next frame
[4: DBG : LoRa PHY  ] read frame from tx buffer: { cmd:radio set wdt  resp: [ok, none] }
[4: DBG : LoRa PHY  ] TX BUF SIZE: 1
[4: INFO: LoRa PHY  ] PHY TX:radio set wdt 3000
[4: DBG : LoRa PHY  ] wait to send next frame ....
[4: DBG : LoRa PHY  ] UART response:ok
[4: DBG : LoRa PHY  ] compare response with:
[4: DBG : LoRa PHY  ]    - ok
[4: DBG : LoRa PHY  ] this is th expected response
[4: DBG : LoRa PHY  ] can send next frame
[4: DBG : LoRa PHY  ] read frame from tx buffer: { cmd:radio rx  resp: [radio_err, radio_rx] }
[4: DBG : LoRa PHY  ] TX BUF SIZE: 0
[4: INFO: LoRa PHY  ] PHY TX:radio rx 0
[4: DBG : LoRa PHY  ] wait to send next frame ....
[4: DBG : LoRa PHY  ] UART response:ok
[4: DBG : LoRa PHY  ] compare response with:
[4: DBG : LoRa PHY  ]    - radio_err
[4: DBG : LoRa PHY  ]    - radio_rx
[5: DBG : LoRa PHY  ] UART response:radio_rx  0100001B611B010002
[5: DBG : LoRa PHY  ] compare response with:
[5: DBG : LoRa PHY  ]    - radio_err
[5: DBG : LoRa PHY  ]    - radio_rx
[5: DBG : LoRa PHY  ] this is th expected response
[5: INFO: LoRa PHY  ] PHY RX:0100001B611B010002
[5: INFO: LoRa MAC  ] MAC RX: {src:1:0 dest:27:24859 k:0 seq:0 next:0 cmd:1 data:02
[5: DBG : LoRa MAC  ] JOIN RESPONSE FRAME
[5: DBG : LoRa MAC  ] retransmit attempt: 0
[5: DBG : LoRa MAC  ] state = READY
[5: DBG : LoRa MAC  ] STOP retransmit timer
[5: INFO: LoRa MAC  ] LoRa root joined
[5: INFO: LoRa MAC  ] Node addr: 2:24859[5: INFO: LoRa MAC  ] 
[5: DBG : LoRa MAC  ] START tx_process
[5: DBG : LoRa MAC  ] MAC_TX process started
[5: DBG : LoRa MAC  ] SET query timer
[5: INFO: Interface ] RECEIVE LORAMAC JOINED EVENT
[5: INFO: Interface ] PREFIX: 2
[5: INFO: RPL       ] IPv6 addresses:
[5: INFO: RPL       ] -- fd00::2:212:4b00:60d:611b
[5: INFO: RPL       ] -- fe80::212:4b00:60d:611b
[5: INFO: RPL       ] reset DIO timer (Init root)
[5: INFO: RPL       ] created DAG with instance ID 0, DAG ID fd00::2:212:4b00:60d:611b, rank 128
[5: INFO: RPL       ] created a new RPL DAG
[5: DBG : LoRa PHY  ] can send next frame
[6: INFO: APP       ] Send PING
[6: DBG : IPv6      ] In udp_send
[6: DBG : IPv6      ] Upper layer checksum len: 14 from: 40
[6: INFO: IPv6      ] Sending packet with length 54 (14)
[6: INFO: RPL       ] SRH creating source routing header with destination 5f:756d:6f6e:735f:6c6f:7261:6d61:6300 
[6: INFO: RPL       ] SRH destination not in our DAG, skip SRH insertion
[6: INFO: TCP/IP    ] output: processing 54 bytes packet from fd00::2:212:4b00:60d:611b to 5f:756d:6f6e:735f:6c6f:7261:6d61:6300
[6: INFO: TCP/IP    ] fallback: removing ext hdrs & setting proto 0 34
[7: INFO: Interface ] Receive data for loramac whouhouuuuuu
[7: INFO: Interface ] CONVERT SRC ADDR:fd00::2:212:4b00:60d:611b[7: DBG : LoRa MAC  ] want to add frame to tx buffer: {src:2:24859 dest:1:0 k:1 seq:0 next:0 cmd:2 data:60000000000E1140223D162E000E4F9C50494E472030
[7: DBG : LoRa MAC  ] frame added
[7: DBG : LoRa MAC  ] TX BUF SIZE: 1
[7: DBG : LoRa MAC  ] post new_tx_frame_event to tx_process
[7: DBG : LoRa MAC  ] read frame from tx buffer.[7: DBG : LoRa MAC  ] TX BUF SIZE: 0
[7: INFO: LoRa MAC  ] MAC TX: {src:2:24859 dest:1:0 k:1 seq:1 next:0 cmd:2 data:60000000000E1140223D162E000E4F9C50494E472030
[7: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio set wdt  resp: [ok, none] }
[7: DBG : LoRa PHY  ] frame added
[7: DBG : LoRa PHY  ] TX BUF SIZE: 1
[7: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio tx  resp: [radio_tx_ok, radio_err] }
[7: DBG : LoRa PHY  ] frame added
[7: DBG : LoRa PHY  ] TX BUF SIZE: 2
[7: DBG : LoRa MAC  ] START retransmit timer
[7: DBG : LoRa MAC  ] listen during 3 s
[7: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio set wdt  resp: [ok, none] }
[7: DBG : LoRa PHY  ] frame added
[7: DBG : LoRa PHY  ] TX BUF SIZE: 3
[7: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio rx  resp: [radio_err, radio_rx] }
[7: DBG : LoRa PHY  ] frame added
[7: DBG : LoRa PHY  ] TX BUF SIZE: 4
[7: DBG : LoRa MAC  ] wait for state to be READY
[7: DBG : LoRa PHY  ] read frame from tx buffer: { cmd:radio set wdt  resp: [ok, none] }
[7: DBG : LoRa PHY  ] TX BUF SIZE: 3
[7: INFO: LoRa PHY  ] PHY TX:radio set wdt 0
[7: DBG : LoRa PHY  ] wait to send next frame ....
[7: DBG : LoRa PHY  ] UART response:ok
[7: DBG : LoRa PHY  ] compare response with:
[7: DBG : LoRa PHY  ]    - ok
[7: DBG : LoRa PHY  ] this is th expected response
[7: DBG : LoRa PHY  ] can send next frame
[7: DBG : LoRa PHY  ] read frame from tx buffer: { cmd:radio tx  resp: [radio_tx_ok, radio_err] }
[7: DBG : LoRa PHY  ] TX BUF SIZE: 2
[7: INFO: LoRa PHY  ] PHY TX:radio tx 02611B010000820160000000000E1140223D162E000E4F9C50494E472030
[7: DBG : LoRa PHY  ] wait to send next frame ....
[7: DBG : LoRa PHY  ] UART response:ok
[7: DBG : LoRa PHY  ] compare response with:
[7: DBG : LoRa PHY  ]    - radio_tx_ok
[7: DBG : LoRa PHY  ]    - radio_err
[7: INFO: RPL       ] sending a multicast-DIO with rank 128 to ff02::1a
[7: DBG : IPv6      ] Upper layer checksum len: 76 from: 40
[7: INFO: ICMPv6    ] Sending ICMPv6 packet to ff02::1a, type 155, code 1, len 72
[7: INFO: TCP/IP    ] output: sending to (NULL LL addr)
[8: DBG : LoRa PHY  ] UART response:radio_tx_ok
[8: DBG : LoRa PHY  ] compare response with:
[8: DBG : LoRa PHY  ]    - radio_tx_ok
[8: DBG : LoRa PHY  ] this is th expected response
[8: DBG : LoRa PHY  ] can send next frame
[8: DBG : LoRa PHY  ] read frame from tx buffer: { cmd:radio set wdt  resp: [ok, none] }
[8: DBG : LoRa PHY  ] TX BUF SIZE: 1
[8: INFO: LoRa PHY  ] PHY TX:radio set wdt 3000
[8: DBG : LoRa PHY  ] wait to send next frame ....
[8: DBG : LoRa PHY  ] UART response:ok
[8: DBG : LoRa PHY  ] compare response with:
[8: DBG : LoRa PHY  ]    - ok
[8: DBG : LoRa PHY  ] this is th expected response
[8: DBG : LoRa PHY  ] can send next frame
[8: DBG : LoRa PHY  ] read frame from tx buffer: { cmd:radio rx  resp: [radio_err, radio_rx] }
[8: DBG : LoRa PHY  ] TX BUF SIZE: 0
[8: INFO: LoRa PHY  ] PHY TX:radio rx 0
[8: DBG : LoRa PHY  ] wait to send next frame ....
[8: DBG : LoRa PHY  ] UART response:ok
[8: DBG : LoRa PHY  ] compare response with:
[8: DBG : LoRa PHY  ]    - radio_err
[8: DBG : LoRa PHY  ]    - radio_rx
[9: DBG : LoRa PHY  ] UART response:radio_rx  01000002611B0301
[9: DBG : LoRa PHY  ] compare response with:
[9: DBG : LoRa PHY  ]    - radio_err
[9: DBG : LoRa PHY  ]    - radio_rx
[9: DBG : LoRa PHY  ] this is th expected response
[9: INFO: LoRa PHY  ] PHY RX:01000002611B0301
[9: INFO: LoRa MAC  ] MAC RX: {src:1:0 dest:2:24859 k:0 seq:1 next:0 cmd:3 data:
[9: DBG : LoRa MAC  ] ACK FRAME
[9: DBG : LoRa MAC  ] STOP retransmit timer
[9: DBG : LoRa MAC  ] retransmit attempt: 0
[9: DBG : LoRa MAC  ] state = READY
[10: DBG : LoRa MAC  ] state is READY
[10: DBG : LoRa PHY  ] can send next frame
[13: INFO: RPL       ] sending a multicast-DIO with rank 128 to ff02::1a
[13: DBG : IPv6      ] Upper layer checksum len: 76 from: 40
[13: INFO: ICMPv6    ] Sending ICMPv6 packet to ff02::1a, type 155, code 1, len 72
[13: INFO: TCP/IP    ] output: sending to (NULL LL addr)
[15: INFO: LoRa MAC  ] Query timeout
[15: DBG : LoRa MAC  ] STOP query timer
[15: DBG : LoRa MAC  ] want to add frame to tx buffer: {src:2:24859 dest:1:0 k:0 seq:2 next:0 cmd:4 data:
[15: DBG : LoRa MAC  ] frame added
[15: DBG : LoRa MAC  ] TX BUF SIZE: 1
[15: DBG : LoRa MAC  ] post new_tx_frame_event to tx_process
[15: DBG : LoRa MAC  ] read frame from tx buffer.[15: DBG : LoRa MAC  ] TX BUF SIZE: 0
[15: INFO: LoRa MAC  ] MAC TX: {src:2:24859 dest:1:0 k:0 seq:2 next:0 cmd:4 data:
[15: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio set wdt  resp: [ok, none] }
[15: DBG : LoRa PHY  ] frame added
[15: DBG : LoRa PHY  ] TX BUF SIZE: 1
[15: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio tx  resp: [radio_tx_ok, radio_err] }
[15: DBG : LoRa PHY  ] frame added
[15: DBG : LoRa PHY  ] TX BUF SIZE: 2
[15: DBG : LoRa MAC  ] START retransmit timer
[15: DBG : LoRa MAC  ] listen during 3 s
[15: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio set wdt  resp: [ok, none] }
[15: DBG : LoRa PHY  ] frame added
[15: DBG : LoRa PHY  ] TX BUF SIZE: 3
[15: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio rx  resp: [radio_err, radio_rx] }
[15: DBG : LoRa PHY  ] frame added
[15: DBG : LoRa PHY  ] TX BUF SIZE: 4
[15: DBG : LoRa MAC  ] wait for state to be READY
[15: DBG : LoRa PHY  ] read frame from tx buffer: { cmd:radio set wdt  resp: [ok, none] }
[15: DBG : LoRa PHY  ] TX BUF SIZE: 3
[15: INFO: LoRa PHY  ] PHY TX:radio set wdt 0
[15: DBG : LoRa PHY  ] wait to send next frame ....
[15: DBG : LoRa PHY  ] UART response:ok
[15: DBG : LoRa PHY  ] compare response with:
[15: DBG : LoRa PHY  ]    - ok
[15: DBG : LoRa PHY  ] this is th expected response
[15: DBG : LoRa PHY  ] can send next frame
[15: DBG : LoRa PHY  ] read frame from tx buffer: { cmd:radio tx  resp: [radio_tx_ok, radio_err] }
[15: DBG : LoRa PHY  ] TX BUF SIZE: 2
[15: INFO: LoRa PHY  ] PHY TX:radio tx 02611B0100000402
[15: DBG : LoRa PHY  ] wait to send next frame ....
[15: DBG : LoRa PHY  ] UART response:ok
[15: DBG : LoRa PHY  ] compare response with:
[15: DBG : LoRa PHY  ]    - radio_tx_ok
[15: DBG : LoRa PHY  ]    - radio_err
[16: DBG : LoRa PHY  ] UART response:radio_tx_ok
[16: DBG : LoRa PHY  ] compare response with:
[16: DBG : LoRa PHY  ]    - radio_tx_ok
[16: DBG : LoRa PHY  ] this is th expected response
[16: DBG : LoRa PHY  ] can send next frame
[16: DBG : LoRa PHY  ] read frame from tx buffer: { cmd:radio set wdt  resp: [ok, none] }
[16: DBG : LoRa PHY  ] TX BUF SIZE: 1
[16: INFO: LoRa PHY  ] PHY TX:radio set wdt 3000
[16: DBG : LoRa PHY  ] wait to send next frame ....
[16: DBG : LoRa PHY  ] UART response:ok
[16: DBG : LoRa PHY  ] compare response with:
[16: DBG : LoRa PHY  ]    - ok
[16: DBG : LoRa PHY  ] this is th expected response
[16: DBG : LoRa PHY  ] can send next frame
[16: DBG : LoRa PHY  ] read frame from tx buffer: { cmd:radio rx  resp: [radio_err, radio_rx] }
[16: DBG : LoRa PHY  ] TX BUF SIZE: 0
[16: INFO: LoRa PHY  ] PHY TX:radio rx 0
[16: DBG : LoRa PHY  ] wait to send next frame ....
[16: DBG : LoRa PHY  ] UART response:ok
[16: DBG : LoRa PHY  ] compare response with:
[16: DBG : LoRa PHY  ]    - radio_err
[16: DBG : LoRa PHY  ]    - radio_rx
[18: DBG : LoRa PHY  ] UART response:radio_rx  01000002611B020160000000000E1140162E223D000E0742504F4E472030
[18: DBG : LoRa PHY  ] compare response with:
[18: DBG : LoRa PHY  ]    - radio_err
[18: DBG : LoRa PHY  ]    - radio_rx
[18: DBG : LoRa PHY  ] this is th expected response
[18: INFO: LoRa PHY  ] PHY RX:01000002611B020160000000000E1140162E223D000E0742504F4E472030
[18: INFO: LoRa MAC  ] MAC RX: {src:1:0 dest:2:24859 k:0 seq:1 next:0 cmd:2 data:60000000000E1140162E223D000E0742504F4E472030
[18: DBG : LoRa MAC  ] DATA FRAME
[18: DBG : LoRa MAC  ] STOP retransmit timer
[18: DBG : LoRa MAC  ] STOP retransmit query timer
[18: DBG : LoRa MAC  ] retransmit attempt: 0
[18: INFO: Interface ] Receive data from LoRaMAC
[18: DBG : Interface ] decode src and dest IPv6 addr:
fd00::1:212:4b00:60d:0[18: DBG : Interface ] 
fd00::2:212:4b00:60d:611b[18: DBG : Interface ] 
[18: INFO: Interface ] Deliver data to the TCP/IP stack
[18: INFO: TCP/IP    ] input: received 53 bytes
[18: INFO: IPv6      ] packet received from fd00::1:212:4b00:60d:0 to fd00::2:212:4b00:60d:611b
[18: INFO: IPv6      ] Receiving UDP packet
[18: DBG : IPv6      ] Upper layer checksum len: 14 from: 40
[18: DBG : IPv6      ] In udp_found
[18: INFO: APP       ] Received MAX PONG PONG 0 from fd00::1:212:4b00:60d:0
[18: INFO: APP       ] Send PING
[18: DBG : IPv6      ] In udp_send
[18: DBG : IPv6      ] Upper layer checksum len: 234 from: 40
[18: INFO: IPv6      ] Sending packet with length 274 (234)
[18: INFO: RPL       ] SRH creating source routing header with destination fd00::1:212:4b00:60d:0 
[18: INFO: RPL       ] SRH destination not in our DAG, skip SRH insertion
[18: INFO: TCP/IP    ] output: processing 274 bytes packet from fd00::2:212:4b00:60d:611b to fd00::1:212:4b00:60d:0
[18: INFO: TCP/IP    ] fallback: removing ext hdrs & setting proto 0 34
[18: INFO: Interface ] Receive data for loramac whouhouuuuuu
[18: INFO: Interface ] CONVERT SRC ADDR:fd00::2:212:4b00:60d:611b[18: DBG : LoRa MAC  ] want to add frame to tx buffer: {src:2:24859 dest:1:0 k:1 seq:0 next:0 cmd:2 data:6000000000EA1140223D162E00EAAAA131323334626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F75723ED9AFE61509
[18: DBG : LoRa MAC  ] frame added
[18: DBG : LoRa MAC  ] TX BUF SIZE: 1
[18: DBG : LoRa MAC  ] post new_tx_frame_event to tx_process
[18: DBG : IPv6      ] In udp_send
[18: DBG : LoRa MAC  ] no data follows[18: DBG : LoRa MAC  ] state = READY
[18: DBG : LoRa MAC  ] RESTART query timer
[18: DBG : LoRa MAC  ] state is READY
[18: DBG : LoRa MAC  ] read frame from tx buffer.[18: DBG : LoRa MAC  ] TX BUF SIZE: 0
[18: INFO: LoRa MAC  ] MAC TX: {src:2:24859 dest:1:0 k:1 seq:3 next:0 cmd:2 data:6000000000EA1140223D162E00EAAAA131323334626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F75723ED9AFE61509
[18: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio set wdt  resp: [ok, none] }
[18: DBG : LoRa PHY  ] frame added
[18: DBG : LoRa PHY  ] TX BUF SIZE: 1
[18: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio tx  resp: [radio_tx_ok, radio_err] }
[18: DBG : LoRa PHY  ] frame added
[18: DBG : LoRa PHY  ] TX BUF SIZE: 2
[18: DBG : LoRa MAC  ] START retransmit timer
[18: DBG : LoRa MAC  ] listen during 3 s
[18: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio set wdt  resp: [ok, none] }
[18: DBG : LoRa PHY  ] frame added
[18: DBG : LoRa PHY  ] TX BUF SIZE: 3
[18: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio rx  resp: [radio_err, radio_rx] }
[18: DBG : LoRa PHY  ] frame added
[18: DBG : LoRa PHY  ] TX BUF SIZE: 4
[18: DBG : LoRa MAC  ] wait for state to be READY
[18: DBG : LoRa PHY  ] can send next frame
[18: DBG : LoRa PHY  ] read frame from tx buffer: { cmd:radio set wdt  resp: [ok, none] }
[18: DBG : LoRa PHY  ] TX BUF SIZE: 3
[18: INFO: LoRa PHY  ] PHY TX:radio set wdt 0
[18: DBG : LoRa PHY  ] wait to send next frame ....
[18: DBG : LoRa PHY  ] UART response:ok
[18: DBG : LoRa PHY  ] compare response with:
[18: DBG : LoRa PHY  ]    - ok
[18: DBG : LoRa PHY  ] this is th expected response
[18: DBG : LoRa PHY  ] can send next frame
[18: DBG : LoRa PHY  ] read frame from tx buffer: { cmd:radio tx  resp: [radio_tx_ok, radio_err] }
[18: DBG : LoRa PHY  ] TX BUF SIZE: 2
[18: INFO: LoRa PHY  ] PHY TX:radio tx
[18: DBG : LoRa PHY  ] wait to send next frame ....
[18: DBG : LoRa PHY  ] UART response:ok
[18: DBG : LoRa PHY  ] compare response with:
[18: DBG : LoRa PHY  ]    - radio_tx_ok
[18: DBG : LoRa PHY  ]    - radio_err
[23: INFO: LoRa MAC  ] Retransmit timeout
[23: DBG : LoRa MAC  ] STOP retransmit timer
[23: INFO: LoRa MAC  ] retransmit frame: {src:2:24859 dest:1:0 k:1 seq:3 next:0 cmd:2 data:6000000000EA1140223D162E00EAAAA131323334626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F75723ED9AFE61509
[23: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio set wdt  resp: [ok, none] }
[23: DBG : LoRa PHY  ] frame added
[23: DBG : LoRa PHY  ] TX BUF SIZE: 3
[23: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio tx  resp: [radio_tx_ok, radio_err] }
[23: DBG : LoRa PHY  ] frame added
[23: DBG : LoRa PHY  ] TX BUF SIZE: 4
[23: DBG : LoRa MAC  ] retransmit attempt: 1
[23: DBG : LoRa MAC  ] RESTART retransmit timer
[23: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio set wdt  resp: [ok, none] }
[23: DBG : LoRa PHY  ] frame added
[23: DBG : LoRa PHY  ] TX BUF SIZE: 5
[23: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio rx  resp: [radio_err, radio_rx] }
[23: DBG : LoRa PHY  ] frame added
[23: DBG : LoRa PHY  ] TX BUF SIZE: 6
[27: DBG : LoRa PHY  ] UART response:radio_tx_ok
[27: DBG : LoRa PHY  ] compare response with:
[27: DBG : LoRa PHY  ]    - radio_tx_ok
[27: DBG : LoRa PHY  ] this is th expected response
[27: DBG : LoRa PHY  ] can send next frame
[27: DBG : LoRa PHY  ] read frame from tx buffer: { cmd:radio set wdt  resp: [ok, none] }
[27: DBG : LoRa PHY  ] TX BUF SIZE: 5
[27: INFO: LoRa PHY  ] PHY TX:radio set wdt 3000
[27: DBG : LoRa PHY  ] wait to send next frame ....
[27: DBG : LoRa PHY  ] UART response:ok
[27: DBG : LoRa PHY  ] compare response with:
[27: DBG : LoRa PHY  ]    - ok
[27: DBG : LoRa PHY  ] this is th expected response
[27: DBG : LoRa PHY  ] can send next frame
[27: DBG : LoRa PHY  ] read frame from tx buffer: { cmd:radio rx  resp: [radio_err, radio_rx] }
[27: DBG : LoRa PHY  ] TX BUF SIZE: 4
[27: INFO: LoRa PHY  ] PHY TX:radio rx 0
[27: DBG : LoRa PHY  ] wait to send next frame ....
[27: DBG : LoRa PHY  ] UART response:ok
[27: DBG : LoRa PHY  ] compare response with:
[27: DBG : LoRa PHY  ]    - radio_err
[27: DBG : LoRa PHY  ]    - radio_rx
[28: INFO: LoRa MAC  ] Query timeout
[28: DBG : LoRa MAC  ] STOP query timer
[28: DBG : LoRa MAC  ] want to add frame to tx buffer: {src:2:24859 dest:1:0 k:0 seq:4 next:0 cmd:4 data:
[28: DBG : LoRa MAC  ] frame added
[28: DBG : LoRa MAC  ] TX BUF SIZE: 1
[28: DBG : LoRa MAC  ] post new_tx_frame_event to tx_process
[28: INFO: LoRa MAC  ] Retransmit timeout
[28: DBG : LoRa MAC  ] STOP retransmit timer
[28: INFO: LoRa MAC  ] retransmit frame: {src:2:24859 dest:1:0 k:1 seq:3 next:0 cmd:2 data:6000000000EA1140223D162E00EAAAA131323334626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F757220546F6D626F6E6A6F75723ED9AFE61509
[28: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio set wdt  resp: [ok, none] }
[28: DBG : LoRa PHY  ] frame added
[28: DBG : LoRa PHY  ] TX BUF SIZE: 5
[28: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio tx  resp: [radio_tx_ok, radio_err] }
[28: DBG : LoRa PHY  ] frame added
[28: DBG : LoRa PHY  ] TX BUF SIZE: 6
[28: DBG : LoRa MAC  ] retransmit attempt: 2
[28: DBG : LoRa MAC  ] RESTART retransmit timer
[28: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio set wdt  resp: [ok, none] }
[28: DBG : LoRa PHY  ] frame added
[28: DBG : LoRa PHY  ] TX BUF SIZE: 7
[28: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio rx  resp: [radio_err, radio_rx] }
[28: DBG : LoRa PHY  ] frame added
[28: DBG : LoRa PHY  ] TX BUF SIZE: 8
[28: DBG : LoRa PHY  ] UART response:radio_rx  01000002611B0303
[28: DBG : LoRa PHY  ] compare response with:
[28: DBG : LoRa PHY  ]    - radio_err
[28: DBG : LoRa PHY  ]    - radio_rx
[28: DBG : LoRa PHY  ] this is th expected response
[28: INFO: LoRa PHY  ] PHY RX:01000002611B0303
[28: INFO: LoRa MAC  ] MAC RX: {src:1:0 dest:2:24859 k:0 seq:3 next:0 cmd:3 data:
[28: DBG : LoRa MAC  ] ACK FRAME
[28: DBG : LoRa MAC  ] STOP retransmit timer
[28: DBG : LoRa MAC  ] retransmit attempt: 0
[28: DBG : LoRa MAC  ] state = READY
[28: DBG : LoRa MAC  ] state is READY
[28: DBG : LoRa MAC  ] read frame from tx buffer.[28: DBG : LoRa MAC  ] TX BUF SIZE: 0
[28: INFO: LoRa MAC  ] MAC TX: {src:2:24859 dest:1:0 k:0 seq:4 next:0 cmd:4 data:
[28: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio set wdt  resp: [ok, none] }
[29: DBG : LoRa PHY  ] frame added
[29: DBG : LoRa PHY  ] TX BUF SIZE: 9
[29: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio tx  resp: [radio_tx_ok, radio_err] }
[29: DBG : LoRa PHY  ] frame added
[29: DBG : LoRa PHY  ] TX BUF SIZE: 10
[29: DBG : LoRa MAC  ] START retransmit timer
[29: DBG : LoRa MAC  ] listen during 3 s
[29: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio set wdt  resp: [ok, none] }
[29: DBG : LoRa PHY  ] frame added
[29: DBG : LoRa PHY  ] TX BUF SIZE: 11
[29: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio rx  resp: [radio_err, radio_rx] }
[29: DBG : LoRa PHY  ] frame added
[29: DBG : LoRa PHY  ] TX BUF SIZE: 12
[29: DBG : LoRa MAC  ] wait for state to be READY
[29: DBG : LoRa PHY  ] can send next frame
[29: DBG : LoRa PHY  ] read frame from tx buffer: { cmd:radio set wdt  resp: [ok, none] }
[29: DBG : LoRa PHY  ] TX BUF SIZE: 11
[29: INFO: LoRa PHY  ] PHY TX:radio set wdt 0
[29: DBG : LoRa PHY  ] wait to send next frame ....
[29: DBG : LoRa PHY  ] UART response:ok
[29: DBG : LoRa PHY  ] compare response with:
[29: DBG : LoRa PHY  ]    - ok
[29: DBG : LoRa PHY  ] this is th expected response
[29: DBG : LoRa PHY  ] can send next frame
[29: DBG : LoRa PHY  ] read frame from tx buffer: { cmd:radio tx  resp: [radio_tx_ok, radio_err] }
[29: DBG : LoRa PHY  ] TX BUF SIZE: 10
[29: INFO: LoRa PHY  ] PHY TX:radio tx
[29: DBG : LoRa PHY  ] wait to send next frame ....
[29: DBG : LoRa PHY  ] UART response:ok
[29: DBG : LoRa PHY  ] compare response with:
[29: DBG : LoRa PHY  ]    - radio_tx_ok
[29: DBG : LoRa PHY  ]    - radio_err
[30: INFO: RPL       ] sending a multicast-DIO with rank 128 to ff02::1a
[30: DBG : IPv6      ] Upper layer checksum len: 76 from: 40
[30: INFO: ICMPv6    ] Sending ICMPv6 packet to ff02::1a, type 155, code 1, len 72
[30: INFO: TCP/IP    ] output: sending to (NULL LL addr)
[34: INFO: LoRa MAC  ] Retransmit timeout
[34: DBG : LoRa MAC  ] STOP retransmit timer
[34: INFO: LoRa MAC  ] retransmit frame: {src:2:24859 dest:1:0 k:0 seq:4 next:0 cmd:4 data:
[34: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio set wdt  resp: [ok, none] }
[34: DBG : LoRa PHY  ] frame added
[34: DBG : LoRa PHY  ] TX BUF SIZE: 11
[34: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio tx  resp: [radio_tx_ok, radio_err] }
[34: DBG : LoRa PHY  ] frame added
[34: DBG : LoRa PHY  ] TX BUF SIZE: 12
[34: DBG : LoRa MAC  ] retransmit attempt: 1
[34: DBG : LoRa MAC  ] RESTART retransmit timer
[34: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio set wdt  resp: [ok, none] }
[34: DBG : LoRa PHY  ] frame added
[34: DBG : LoRa PHY  ] TX BUF SIZE: 13
[34: DBG : LoRa PHY  ] want to add frame to tx buffer: { cmd:radio rx  resp: [radio_err, radio_rx] }
[34: DBG : LoRa PHY  ] frame added
[34: DBG : LoRa PHY  ] TX BUF SIZE: 14



wait PING packet...
lora_mac-WARNING-  2021-08-14 14:28:17,507-Loss of 1 frames
Rceive IP packet: 
###[ IPv6 ]### 
  version   = 6
  tc        = 0
  fl        = 0
  plen      = 14
  nh        = UDP
  hlim      = 64
  src       = fd00::2:212:4b00:60d:611b
  dst       = fd00::1:212:4b00:60d:0
###[ UDP ]### 
     sport     = 8765
     dport     = 5678
     len       = 14
     chksum    = 0x4f9c
###[ Raw ]### 
        load      = 'PING 0'

send PONG to fd00::2:212:4b00:60d:611b
###[ IPv6 ]### 
  version   = 6
  tc        = 0
  fl        = 0
  plen      = 14
  nh        = UDP
  hlim      = 64
  src       = fd00::1:212:4b00:60d:0
  dst       = fd00::2:212:4b00:60d:611b
###[ UDP ]### 
     sport     = 5678
     dport     = 8765
     len       = 14
     chksum    = 0x742
###[ Raw ]### 
        load      = 'PONG 0'

wait PING packet...
Rceive IP packet: 
###[ IPv6 ]### 
  version   = 6
  tc        = 0
  fl        = 0
  plen      = 234
  nh        = UDP
  hlim      = 64
  src       = fd00::2:212:4b00:60d:611b
  dst       = fd00::1:212:4b00:60d:0
###[ UDP ]### 
     sport     = 8765
     dport     = 5678
     len       = 234
     chksum    = 0xaaa1
###[ Raw ]### 
        load      = '1234bonjour Tombonjour Tombonjour Tombonjour Tombonjour Tombonjour Tombonjour Tombonjour Tombonjour Tombonjour Tombonjour Tombonjour Tombonjour Tombonjour Tombonjour Tombonjour Tombonjour Tombonjour Tombonjour Tombonjour>ٯ\\xe6\x15\t'

send PONG to fd00::2:212:4b00:60d:611b
###[ IPv6 ]### 
  version   = 6
  tc        = 0
  fl        = 0
  plen      = 14
  nh        = UDP
  hlim      = 64
  src       = fd00::1:212:4b00:60d:0
  dst       = fd00::2:212:4b00:60d:611b
###[ UDP ]### 
     sport     = 5678
     dport     = 8765
     len       = 14
     chksum    = 0x741
###[ Raw ]### 
        load      = 'PONG 1'

wait PING packet...